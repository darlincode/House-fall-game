{"ast":null,"code":"import * as THREE from \"three\";\nimport { remove } from \"../utils\";\nimport _ from \"lodash\"; //-- https://gist.github.com/zentrope/5022d89cfa995ac71978\n\nvar frustum = new THREE.Frustum();\nvar cameraViewProjectionMatrix = new THREE.Matrix4();\n\nvar Removal = function Removal(entities) {\n  var camera = entities.camera;\n  var removeableKeys = Object.keys(entities).filter(function (x) {\n    return entities[x].removable;\n  });\n  camera.updateMatrixWorld();\n  camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n  cameraViewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n  frustum.setFromMatrix(cameraViewProjectionMatrix);\n  removeableKeys.forEach(function (key) {\n    var test = entities[key].removable;\n    if (_.isFunction(test) ? test(frustum, entities[key], entities) : true) remove(entities, key);\n  });\n  return entities;\n};\n\nexport default Removal;","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/systems/removal.js"],"names":["THREE","remove","_","frustum","Frustum","cameraViewProjectionMatrix","Matrix4","Removal","entities","camera","removeableKeys","Object","keys","filter","x","removable","updateMatrixWorld","matrixWorldInverse","getInverse","matrixWorld","multiplyMatrices","projectionMatrix","setFromMatrix","forEach","key","test","isFunction"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;AAEA,IAAMC,OAAO,GAAG,IAAIH,KAAK,CAACI,OAAV,EAAhB;AACA,IAAMC,0BAA0B,GAAG,IAAIL,KAAK,CAACM,OAAV,EAAnC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ,EAAI;AAC1B,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;AACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAAtB,CACrB,UAAAC,CAAC;AAAA,WAAIN,QAAQ,CAACM,CAAD,CAAR,CAAYC,SAAhB;AAAA,GADoB,CAAvB;AAIAN,EAAAA,MAAM,CAACO,iBAAP;AACAP,EAAAA,MAAM,CAACQ,kBAAP,CAA0BC,UAA1B,CAAqCT,MAAM,CAACU,WAA5C;AACAd,EAAAA,0BAA0B,CAACe,gBAA3B,CACEX,MAAM,CAACY,gBADT,EAEEZ,MAAM,CAACQ,kBAFT;AAIAd,EAAAA,OAAO,CAACmB,aAAR,CAAsBjB,0BAAtB;AAEAK,EAAAA,cAAc,CAACa,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAC5B,QAAMC,IAAI,GAAGjB,QAAQ,CAACgB,GAAD,CAAR,CAAcT,SAA3B;AAEA,QAAIb,CAAC,CAACwB,UAAF,CAAaD,IAAb,IAAqBA,IAAI,CAACtB,OAAD,EAAUK,QAAQ,CAACgB,GAAD,CAAlB,EAAyBhB,QAAzB,CAAzB,GAA8D,IAAlE,EACEP,MAAM,CAACO,QAAD,EAAWgB,GAAX,CAAN;AACH,GALD;AAOA,SAAOhB,QAAP;AACD,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import * as THREE from \"three\";\nimport { remove } from \"../utils\";\nimport _ from \"lodash\";\n\n//-- https://gist.github.com/zentrope/5022d89cfa995ac71978\n\nconst frustum = new THREE.Frustum();\nconst cameraViewProjectionMatrix = new THREE.Matrix4();\n\nconst Removal = entities => {\n  const camera = entities.camera;\n  const removeableKeys = Object.keys(entities).filter(\n    x => entities[x].removable\n  );\n\n  camera.updateMatrixWorld();\n  camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n  cameraViewProjectionMatrix.multiplyMatrices(\n    camera.projectionMatrix,\n    camera.matrixWorldInverse\n  );\n  frustum.setFromMatrix(cameraViewProjectionMatrix);\n\n  removeableKeys.forEach(key => {\n    const test = entities[key].removable;\n\n    if (_.isFunction(test) ? test(frustum, entities[key], entities) : true)\n      remove(entities, key);\n  });\n\n  return entities;\n};\n\nexport default Removal;\n"]},"metadata":{},"sourceType":"module"}