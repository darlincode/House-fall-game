{"ast":null,"code":"import _regeneratorRuntime from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as THREE from \"three\";\nimport { promisifyLoader } from \"../utils/three\";\nimport Particles from \"./particles\";\nimport ParticleFile from \"../../assets/textures/particle.png\";\nvar loader = promisifyLoader(new THREE.TextureLoader());\nvar particleTexture = loader.load(ParticleFile);\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var parent, _ref$x, x, _ref$y, y, _ref$z, z, _ref$height, height, _ref$radius, radius, _ref$verticalSpeed, verticalSpeed, _ref$horizontalSpeed, horizontalSpeed, _ref$color, color, swirl;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            parent = _ref.parent, _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, _ref$z = _ref.z, z = _ref$z === void 0 ? 0 : _ref$z, _ref$height = _ref.height, height = _ref$height === void 0 ? 0.5 : _ref$height, _ref$radius = _ref.radius, radius = _ref$radius === void 0 ? 0.5 : _ref$radius, _ref$verticalSpeed = _ref.verticalSpeed, verticalSpeed = _ref$verticalSpeed === void 0 ? 0.01 : _ref$verticalSpeed, _ref$horizontalSpeed = _ref.horizontalSpeed, horizontalSpeed = _ref$horizontalSpeed === void 0 ? 0.3 : _ref$horizontalSpeed, _ref$color = _ref.color, color = _ref$color === void 0 ? 0xffffff : _ref$color;\n            _context.next = 3;\n            return Particles({\n              parent: parent,\n              particleTexture: particleTexture,\n              maxParticles: 250,\n              options: {\n                position: new THREE.Vector3(x, y, z),\n                positionRandomness: 0,\n                velocity: new THREE.Vector3(),\n                velocityRandomness: 0,\n                color: color,\n                colorRandomness: 0,\n                turbulence: 0,\n                lifetime: 12,\n                size: 10,\n                sizeRandomness: 0,\n                verticalSpeed: verticalSpeed,\n                theta: 0\n              },\n              spawnOptions: {\n                spawnRate: 20,\n                timeScale: 1\n              },\n              beforeSpawn: function beforeSpawn(self, entities, _ref3) {\n                var options = _ref3.options;\n                options.theta += horizontalSpeed;\n                options.position.x = x + Math.cos(options.theta) * radius;\n                options.position.y += options.verticalSpeed;\n                options.position.z = z + Math.sin(options.theta) * radius;\n                if (Math.abs(options.position.y - y) > height) options.verticalSpeed *= -1;\n              }\n            });\n\n          case 3:\n            swirl = _context.sent;\n            return _context.abrupt(\"return\", {\n              model: swirl.emitter,\n              particles: {\n                swirl: swirl\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/components/portal.js"],"names":["THREE","promisifyLoader","Particles","ParticleFile","loader","TextureLoader","particleTexture","load","parent","x","y","z","height","radius","verticalSpeed","horizontalSpeed","color","maxParticles","options","position","Vector3","positionRandomness","velocity","velocityRandomness","colorRandomness","turbulence","lifetime","size","sizeRandomness","theta","spawnOptions","spawnRate","timeScale","beforeSpawn","self","entities","Math","cos","sin","abs","swirl","model","emitter","particles"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport { promisifyLoader } from \"../utils/three\";\nimport Particles from \"./particles\";\nimport ParticleFile from \"../../assets/textures/particle.png\";\n\nconst loader = promisifyLoader(new THREE.TextureLoader());\nconst particleTexture = loader.load(ParticleFile);\n\nexport default async ({\n\tparent,\n\tx = 0,\n\ty = 0,\n\tz = 0,\n\theight = 0.5,\n\tradius = 0.5,\n\tverticalSpeed = 0.01,\n\thorizontalSpeed = 0.3,\n\tcolor = 0xffffff\n}) => {\n\n\tconst swirl = await Particles({\n\t\tparent,\n\t\tparticleTexture,\n\t\tmaxParticles: 250,\n\t\toptions: {\n\t\t\tposition: new THREE.Vector3(x, y, z),\n\t\t\tpositionRandomness: 0,\n\t\t\tvelocity: new THREE.Vector3(),\n\t\t\tvelocityRandomness: 0,\n\t\t\tcolor,\n\t\t\tcolorRandomness: 0,\n\t\t\tturbulence: 0,\n\t\t\tlifetime: 12,\n\t\t\tsize: 10,\n\t\t\tsizeRandomness: 0,\n\t\t\tverticalSpeed,\n\t\t\ttheta: 0\n\t\t},\n\t\tspawnOptions: {\n\t\t\tspawnRate: 20,\n\t\t\ttimeScale: 1\n\t\t},\n\t\tbeforeSpawn(self, entities, { options }) {\n\t\t\toptions.theta += horizontalSpeed;\n\t\t\toptions.position.x = x + Math.cos(options.theta) * radius;\n\t\t\toptions.position.y += options.verticalSpeed;\n\t\t\toptions.position.z = z + Math.sin(options.theta) * radius;\n\n\t\t\tif (Math.abs(options.position.y - y) > height)\n\t\t\t\toptions.verticalSpeed *= -1;\n\t\t}\n\t});\n\n\treturn {\n\t\tmodel: swirl.emitter,\n\t\tparticles: {\n\t\t\tswirl\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}