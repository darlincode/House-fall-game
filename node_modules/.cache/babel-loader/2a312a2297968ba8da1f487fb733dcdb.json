{"ast":null,"code":"import { all } from \"../utils\";\nimport _ from \"lodash\";\n\nvar start = function start(timeline, args) {\n  if (!timeline.start) timeline.start = args.time.current;\n};\n\nvar update = function update(entity, entities, key, timeline, args) {\n  var time = args.time;\n\n  if (timeline.duration) {\n    var percent = (time.current - timeline.start) / timeline.duration;\n\n    if (percent <= 1) {\n      timeline.update(entity, entities, percent, timeline, args);\n    } else {\n      if (timeline.complete) timeline.complete(entity, entities, timeline, args);\n      delete entity.timelines[key];\n    }\n  }\n\n  if (timeline.while) {\n    if (_.isFunction(timeline.while) ? timeline.while(entity, entities, timeline, args) : true) {\n      timeline.update(entity, entities, timeline, args);\n    } else {\n      if (timeline.complete) timeline.complete(entity, entities, timeline, args);\n      delete entity.timelines[key];\n    }\n  }\n};\n\nvar Timeline = function Timeline(entities, args) {\n  var entitiesWithTimelines = all(entities, function (e) {\n    return e.timelines;\n  });\n\n  for (var i = 0; i < entitiesWithTimelines.length; i++) {\n    var entity = entitiesWithTimelines[i];\n    var keys = Object.keys(entity.timelines);\n\n    for (var j = 0; j < keys.length; j++) {\n      var key = keys[j];\n      var timeline = entity.timelines[key];\n\n      if (timeline) {\n        start(timeline, args);\n        update(entity, entities, key, timeline, args);\n      }\n    }\n  }\n\n  return entities;\n};\n\nexport default Timeline;","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/systems/timeline.js"],"names":["all","_","start","timeline","args","time","current","update","entity","entities","key","duration","percent","complete","timelines","while","isFunction","Timeline","entitiesWithTimelines","e","i","length","keys","Object","j"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,IAAX,EAAoB;AAChC,MAAI,CAACD,QAAQ,CAACD,KAAd,EAAqBC,QAAQ,CAACD,KAAT,GAAiBE,IAAI,CAACC,IAAL,CAAUC,OAA3B;AACtB,CAFD;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAASC,QAAT,EAAmBC,GAAnB,EAAwBP,QAAxB,EAAkCC,IAAlC,EAA2C;AACxD,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;;AAEA,MAAIF,QAAQ,CAACQ,QAAb,EAAuB;AACrB,QAAIC,OAAO,GAAG,CAACP,IAAI,CAACC,OAAL,GAAeH,QAAQ,CAACD,KAAzB,IAAkCC,QAAQ,CAACQ,QAAzD;;AAEA,QAAIC,OAAO,IAAI,CAAf,EAAkB;AAChBT,MAAAA,QAAQ,CAACI,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCG,OAAlC,EAA2CT,QAA3C,EAAqDC,IAArD;AACD,KAFD,MAEO;AACL,UAAID,QAAQ,CAACU,QAAb,EACEV,QAAQ,CAACU,QAAT,CAAkBL,MAAlB,EAA0BC,QAA1B,EAAoCN,QAApC,EAA8CC,IAA9C;AAEF,aAAOI,MAAM,CAACM,SAAP,CAAiBJ,GAAjB,CAAP;AACD;AACF;;AAED,MAAIP,QAAQ,CAACY,KAAb,EAAoB;AAClB,QACEd,CAAC,CAACe,UAAF,CAAab,QAAQ,CAACY,KAAtB,IACIZ,QAAQ,CAACY,KAAT,CAAeP,MAAf,EAAuBC,QAAvB,EAAiCN,QAAjC,EAA2CC,IAA3C,CADJ,GAEI,IAHN,EAIE;AACAD,MAAAA,QAAQ,CAACI,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCN,QAAlC,EAA4CC,IAA5C;AACD,KAND,MAMO;AACL,UAAID,QAAQ,CAACU,QAAb,EACEV,QAAQ,CAACU,QAAT,CAAkBL,MAAlB,EAA0BC,QAA1B,EAAoCN,QAApC,EAA8CC,IAA9C;AAEF,aAAOI,MAAM,CAACM,SAAP,CAAiBJ,GAAjB,CAAP;AACD;AACF;AACF,CA9BD;;AAgCA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACR,QAAD,EAAWL,IAAX,EAAoB;AACnC,MAAMc,qBAAqB,GAAGlB,GAAG,CAACS,QAAD,EAAW,UAAAU,CAAC;AAAA,WAAIA,CAAC,CAACL,SAAN;AAAA,GAAZ,CAAjC;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,qBAAqB,CAACG,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACrD,QAAMZ,MAAM,GAAGU,qBAAqB,CAACE,CAAD,CAApC;AACA,QAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYd,MAAM,CAACM,SAAnB,CAAb;;AAEA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACD,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,UAAMd,GAAG,GAAGY,IAAI,CAACE,CAAD,CAAhB;AACA,UAAMrB,QAAQ,GAAGK,MAAM,CAACM,SAAP,CAAiBJ,GAAjB,CAAjB;;AAEA,UAAIP,QAAJ,EAAc;AACZD,QAAAA,KAAK,CAACC,QAAD,EAAWC,IAAX,CAAL;AACAG,QAAAA,MAAM,CAACC,MAAD,EAASC,QAAT,EAAmBC,GAAnB,EAAwBP,QAAxB,EAAkCC,IAAlC,CAAN;AACD;AACF;AACF;;AAED,SAAOK,QAAP;AACD,CAnBD;;AAqBA,eAAeQ,QAAf","sourcesContent":["import { all } from \"../utils\";\nimport _ from \"lodash\";\n\nconst start = (timeline, args) => {\n  if (!timeline.start) timeline.start = args.time.current;\n};\n\nconst update = (entity, entities, key, timeline, args) => {\n  const time = args.time;\n\n  if (timeline.duration) {\n    let percent = (time.current - timeline.start) / timeline.duration;\n\n    if (percent <= 1) {\n      timeline.update(entity, entities, percent, timeline, args);\n    } else {\n      if (timeline.complete)\n        timeline.complete(entity, entities, timeline, args);\n\n      delete entity.timelines[key];\n    }\n  }\n\n  if (timeline.while) {\n    if (\n      _.isFunction(timeline.while)\n        ? timeline.while(entity, entities, timeline, args)\n        : true\n    ) {\n      timeline.update(entity, entities, timeline, args);\n    } else {\n      if (timeline.complete)\n        timeline.complete(entity, entities, timeline, args);\n\n      delete entity.timelines[key];\n    }\n  }\n};\n\nconst Timeline = (entities, args) => {\n  const entitiesWithTimelines = all(entities, e => e.timelines);\n\n  for (let i = 0; i < entitiesWithTimelines.length; i++) {\n    const entity = entitiesWithTimelines[i];\n    const keys = Object.keys(entity.timelines);\n\n    for (let j = 0; j < keys.length; j++) {\n      const key = keys[j];\n      const timeline = entity.timelines[key];\n\n      if (timeline) {\n        start(timeline, args);\n        update(entity, entities, key, timeline, args);\n      }\n    }\n  }\n\n  return entities;\n};\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}