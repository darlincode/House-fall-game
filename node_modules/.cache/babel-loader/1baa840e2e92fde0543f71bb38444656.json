{"ast":null,"code":"import _regeneratorRuntime from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as THREE from \"three\";\nimport GPUParticleSystem from \"../graphics/gpu-particle-system\";\nimport { add, promisifyLoader } from \"../utils/three\";\nimport NoiseFile from \"../../assets/textures/perlin.png\";\nvar loader = promisifyLoader(new THREE.TextureLoader());\n\nvar _noiseTexture = loader.load(NoiseFile);\n\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _ref$maxParticles, maxParticles, noiseTexture, particleTexture, parent, _ref$options, options, _ref$spawnOptions, spawnOptions, _ref$beforeSpawn, beforeSpawn, emitter;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$maxParticles = _ref.maxParticles, maxParticles = _ref$maxParticles === void 0 ? 250 : _ref$maxParticles, noiseTexture = _ref.noiseTexture, particleTexture = _ref.particleTexture, parent = _ref.parent, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, _ref$spawnOptions = _ref.spawnOptions, spawnOptions = _ref$spawnOptions === void 0 ? {} : _ref$spawnOptions, _ref$beforeSpawn = _ref.beforeSpawn, beforeSpawn = _ref$beforeSpawn === void 0 ? function () {} : _ref$beforeSpawn;\n            _context.t0 = GPUParticleSystem;\n            _context.t1 = maxParticles;\n            _context.next = 5;\n            return Promise.resolve(noiseTexture || _noiseTexture);\n\n          case 5:\n            _context.t2 = _context.sent;\n            _context.next = 8;\n            return Promise.resolve(particleTexture);\n\n          case 8:\n            _context.t3 = _context.sent;\n            _context.t4 = {\n              maxParticles: _context.t1,\n              particleNoiseTex: _context.t2,\n              particleSpriteTex: _context.t3\n            };\n            emitter = new _context.t0(_context.t4);\n            add(parent, emitter);\n            return _context.abrupt(\"return\", {\n              emitter: emitter,\n              options: options,\n              spawnOptions: spawnOptions,\n              beforeSpawn: beforeSpawn,\n              tick: 0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/components/particles.js"],"names":["THREE","GPUParticleSystem","add","promisifyLoader","NoiseFile","loader","TextureLoader","_noiseTexture","load","maxParticles","noiseTexture","particleTexture","parent","options","spawnOptions","beforeSpawn","Promise","resolve","particleNoiseTex","particleSpriteTex","emitter","tick"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,GAAT,EAAcC,eAAd,QAAqC,gBAArC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,IAAMC,MAAM,GAAGF,eAAe,CAAC,IAAIH,KAAK,CAACM,aAAV,EAAD,CAA9B;;AACA,IAAMC,aAAa,GAAGF,MAAM,CAACG,IAAP,CAAYJ,SAAZ,CAAtB;;AAEA;AAAA,uEAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCACdK,YADc,EACdA,YADc,kCACC,GADD,sBAEdC,YAFc,QAEdA,YAFc,EAGdC,eAHc,QAGdA,eAHc,EAIdC,MAJc,QAIdA,MAJc,sBAKdC,OALc,EAKdA,OALc,6BAKJ,EALI,0CAMdC,YANc,EAMdA,YANc,kCAMC,EAND,8CAOdC,WAPc,EAOdA,WAPc,iCAOA,YAAM,CAAE,CAPR;AAAA,0BASMd,iBATN;AAAA,0BAUbQ,YAVa;AAAA;AAAA,mBAWWO,OAAO,CAACC,OAAR,CAAgBP,YAAY,IAAIH,aAAhC,CAXX;;AAAA;AAAA;AAAA;AAAA,mBAYYS,OAAO,CAACC,OAAR,CAAgBN,eAAhB,CAZZ;;AAAA;AAAA;AAAA;AAUbF,cAAAA,YAVa;AAWbS,cAAAA,gBAXa;AAYbC,cAAAA,iBAZa;AAAA;AASRC,YAAAA,OATQ;AAedlB,YAAAA,GAAG,CAACU,MAAD,EAASQ,OAAT,CAAH;AAfc,6CAiBP;AACNA,cAAAA,OAAO,EAAPA,OADM;AAENP,cAAAA,OAAO,EAAPA,OAFM;AAGNC,cAAAA,YAAY,EAAZA,YAHM;AAINC,cAAAA,WAAW,EAAXA,WAJM;AAKNM,cAAAA,IAAI,EAAE;AALA,aAjBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as THREE from \"three\";\nimport GPUParticleSystem from \"../graphics/gpu-particle-system\";\nimport { add, promisifyLoader } from \"../utils/three\";\nimport NoiseFile from \"../../assets/textures/perlin.png\";\n\nconst loader = promisifyLoader(new THREE.TextureLoader());\nconst _noiseTexture = loader.load(NoiseFile);\n\nexport default async ({\n\tmaxParticles = 250,\n\tnoiseTexture,\n\tparticleTexture,\n\tparent,\n\toptions = {},\n\tspawnOptions = {},\n\tbeforeSpawn = () => {}\n}) => {\n\tconst emitter = new GPUParticleSystem({\n\t\tmaxParticles,\n\t\tparticleNoiseTex: await Promise.resolve(noiseTexture || _noiseTexture),\n\t\tparticleSpriteTex: await Promise.resolve(particleTexture)\n\t});\n\n\tadd(parent, emitter);\n\n\treturn {\n\t\temitter,\n\t\toptions,\n\t\tspawnOptions,\n\t\tbeforeSpawn,\n\t\ttick: 0\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}