{"ast":null,"code":"import _regeneratorRuntime from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/darlington-chuks/Documents/game-engine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as THREE from \"three\";\nimport Sprite from \"./sprite\";\nimport { between } from \"../utils\";\nimport { promisifyLoader } from \"../utils/three\";\nimport CupheadFile from \"../../assets/sprite-sheets/cuphead.png\";\nvar loader = promisifyLoader(new THREE.TextureLoader());\nvar spriteSheet = loader.load(CupheadFile);\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var parent, _ref$x, x, _ref$y, y, _ref$z, z, sprite;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            parent = _ref.parent, _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, _ref$z = _ref.z, z = _ref$z === void 0 ? 0 : _ref$z;\n            _context.next = 3;\n            return Sprite({\n              parent: parent,\n              x: x,\n              y: y,\n              z: z,\n              spriteSheet: spriteSheet,\n              columns: 16,\n              rows: 8,\n              actions: {\n                idle: {\n                  start: {\n                    row: 2,\n                    column: 0\n                  }\n                },\n                jump: {\n                  start: {\n                    row: 0,\n                    column: 0\n                  },\n                  end: {\n                    row: 0,\n                    column: 9\n                  },\n                  loop: false\n                },\n                s: {\n                  start: {\n                    row: 1,\n                    column: 0\n                  },\n                  end: {\n                    row: 1,\n                    column: 12\n                  }\n                },\n                se: {\n                  start: {\n                    row: 3,\n                    column: 0\n                  },\n                  end: {\n                    row: 3,\n                    column: 15\n                  }\n                },\n                e: {\n                  start: {\n                    row: 4,\n                    column: 0\n                  },\n                  end: {\n                    row: 4,\n                    column: 13\n                  }\n                },\n                ne: {\n                  start: {\n                    row: 6,\n                    column: 0\n                  },\n                  end: {\n                    row: 6,\n                    column: 14\n                  }\n                },\n                n: {\n                  start: {\n                    row: 7,\n                    column: 1\n                  },\n                  end: {\n                    row: 7,\n                    column: 15\n                  }\n                },\n                nw: {\n                  start: {\n                    row: 6,\n                    column: 0\n                  },\n                  end: {\n                    row: 6,\n                    column: 14\n                  },\n                  flipX: true\n                },\n                w: {\n                  start: {\n                    row: 4,\n                    column: 0\n                  },\n                  end: {\n                    row: 4,\n                    column: 13\n                  },\n                  flipX: true\n                },\n                sw: {\n                  start: {\n                    row: 3,\n                    column: 0\n                  },\n                  end: {\n                    row: 3,\n                    column: 15\n                  },\n                  flipX: true\n                }\n              }\n            });\n\n          case 3:\n            sprite = _context.sent;\n            sprite.timelines.controls = {\n              while: true,\n              directions: [{\n                heading: 0,\n                action: \"e\"\n              }, {\n                heading: -45,\n                action: \"ne\"\n              }, {\n                heading: -90,\n                action: \"n\"\n              }, {\n                heading: -135,\n                action: \"nw\"\n              }, {\n                heading: -180,\n                action: \"w\"\n              }, {\n                heading: 45,\n                action: \"se\"\n              }, {\n                heading: 90,\n                action: \"s\"\n              }, {\n                heading: 135,\n                action: \"sw\"\n              }, {\n                heading: 180,\n                action: \"w\"\n              }],\n              update: function update(self, entities, _ref3, _ref4) {\n                var directions = _ref3.directions;\n                var gamepadController = _ref4.gamepadController;\n\n                if (gamepadController.leftStick.heading !== null) {\n                  var degrees = THREE.Math.radToDeg(gamepadController.leftStick.heading);\n                  var direction = directions.find(function (x) {\n                    return between(degrees, x.heading - 25, x.heading + 25);\n                  });\n                  self.actions[direction.action]();\n                } else self.actions.idle();\n              }\n            };\n            return _context.abrupt(\"return\", sprite);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/components/cuphead.js"],"names":["THREE","Sprite","between","promisifyLoader","CupheadFile","loader","TextureLoader","spriteSheet","load","parent","x","y","z","columns","rows","actions","idle","start","row","column","jump","end","loop","s","se","e","ne","n","nw","flipX","w","sw","sprite","timelines","controls","while","directions","heading","action","update","self","entities","gamepadController","leftStick","degrees","Math","radToDeg","direction","find"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport Sprite from \"./sprite\";\nimport { between } from \"../utils\";\nimport { promisifyLoader } from \"../utils/three\";\nimport CupheadFile from \"../../assets/sprite-sheets/cuphead.png\";\n\nconst loader = promisifyLoader(new THREE.TextureLoader());\nconst spriteSheet = loader.load(CupheadFile);\n\nexport default async ({ parent, x = 0, y = 0, z = 0}) => {\n\t\n\tconst sprite = await Sprite({\n\t\tparent,\n\t\tx,\n\t\ty,\n\t\tz,\n\t\tspriteSheet,\n\t\tcolumns: 16,\n\t\trows: 8,\n\t\tactions: {\n\t\t\tidle: {\n\t\t\t\tstart: { row: 2, column: 0 }\n\t\t\t},\n\t\t\tjump: {\n\t\t\t\tstart: { row: 0,  column: 0 },\n\t\t\t\tend: { row: 0, column: 9 },\n\t\t\t\tloop: false\n\t\t\t},\n\t\t\ts: {\n\t\t\t\tstart: { row: 1, column: 0 },\n\t\t\t\tend: { row: 1, column: 12 }\n\t\t\t},\n\t\t\tse: {\n\t\t\t\tstart: { row: 3, column: 0 },\n\t\t\t\tend: { row: 3, column: 15 }\n\t\t\t},\n\t\t\te: {\n\t\t\t\tstart: { row: 4, column: 0 },\n\t\t\t\tend: { row: 4, column: 13 }\n\t\t\t},\n\t\t\tne: {\n\t\t\t\tstart: { row: 6, column: 0 },\n\t\t\t\tend: { row: 6, column: 14 }\n\t\t\t},\n\t\t\tn: {\n\t\t\t\tstart: { row: 7, column: 1 },\n\t\t\t\tend: { row: 7, column: 15 }\n\t\t\t},\n\t\t\tnw: {\n\t\t\t\tstart: { row: 6, column: 0 },\n\t\t\t\tend: { row: 6, column: 14 },\n\t\t\t\tflipX: true\n\t\t\t},\n\t\t\tw: {\n\t\t\t\tstart: { row: 4, column: 0 },\n\t\t\t\tend: { row: 4, column: 13 },\n\t\t\t\tflipX: true\n\t\t\t},\n\t\t\tsw: {\n\t\t\t\tstart: { row: 3, column: 0 },\n\t\t\t\tend: { row: 3, column: 15 },\n\t\t\t\tflipX: true\n\t\t\t}\n\t\t}\n\t});\n\n\tsprite.timelines.controls = {\n\t\twhile: true,\n\t\tdirections: [\n\t\t\t{ heading: 0, action: \"e\" },\n\t\t\t{ heading: -45, action: \"ne\" },\n\t\t\t{ heading: -90, action: \"n\" },\n\t\t\t{ heading: -135, action: \"nw\" },\n\t\t\t{ heading: -180, action: \"w\" },\n\t\t\t{ heading: 45, action: \"se\" },\n\t\t\t{ heading: 90, action: \"s\" },\n\t\t\t{ heading: 135, action: \"sw\" },\n\t\t\t{ heading: 180, action: \"w\" }\n\t\t],\n\t\tupdate(self, entities, { directions }, { gamepadController }) {\n\t\t\tif (gamepadController.leftStick.heading !== null ) {\n\t\t\t\tconst degrees = THREE.Math.radToDeg(gamepadController.leftStick.heading)\n\t\t\t\tconst direction = directions.find(x => between(degrees, x.heading - 25, x.heading + 25))\n\n\t\t\t\tself.actions[direction.action]()\n\t\t\t} else self.actions.idle();\n\t\t}\n\t};\n\n\treturn sprite;\n};\n"]},"metadata":{},"sourceType":"module"}