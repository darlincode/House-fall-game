{"ast":null,"code":"import * as THREE from \"three\";\nimport SkeletonUtils from \"./skeleton-utils\";\nexport var clean = function clean(obj) {\n  while (obj.children.length > 0) {\n    clean(obj.children[0]);\n    obj.remove(obj.children[0]);\n  }\n\n  if (obj.geometry && obj.geometry.dispose) obj.geometry.dispose();\n  if (obj.material && obj.material.dispose) obj.material.dispose();\n  if (obj.texture && obj.texture.dispose) obj.texture.dispose();\n};\nexport var clear = clean;\nexport var remove = function remove(parent, child) {\n  if (child) clean(child);\n  if (parent) parent.remove(child);\n};\nexport var direction = function direction(obj) {\n  return obj.getWorldDirection(new THREE.Vector3());\n};\nexport var rotateAroundPoint = function rotateAroundPoint(obj, point, _ref) {\n  var _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y,\n      _ref$z = _ref.z,\n      z = _ref$z === void 0 ? 0 : _ref$z;\n  //-- https://stackoverflow.com/a/42866733/138392\n  //-- https://stackoverflow.com/a/44288885/138392\n  var original = obj.position.clone();\n  var pivot = point.clone();\n  var diff = new THREE.Vector3().subVectors(original, pivot);\n  obj.position.copy(pivot);\n  obj.rotation.x += x;\n  obj.rotation.y += y;\n  obj.rotation.z += z;\n  diff.applyAxisAngle(new THREE.Vector3(1, 0, 0), x);\n  diff.applyAxisAngle(new THREE.Vector3(0, 1, 0), y);\n  diff.applyAxisAngle(new THREE.Vector3(0, 0, 1), z);\n  obj.position.add(diff);\n};\nexport var model = function model(obj) {\n  return obj.model ? obj.model : obj;\n};\nexport var add = function add(parent, child) {\n  if (!parent || !child) return;\n  var p = parent.model ? parent.model : parent;\n  var c = child.model ? child.model : child;\n  model(p).add(model(c));\n};\nexport var reparent = function reparent(subject, newParent) {\n  subject.matrix.copy(subject.matrixWorld);\n  subject.applyMatrix(new THREE.Matrix4().getInverse(newParent.matrixWorld));\n  newParent.add(subject);\n};\nexport var size = function size(model) {\n  var currentSize = new THREE.Vector3();\n  var currentBox = new THREE.Box3().setFromObject(model);\n  currentBox.getSize(currentSize);\n  return currentSize;\n};\nexport var cloneTexture = function cloneTexture(texture) {\n  var clone = texture.clone();\n  return clone;\n};\nexport var cloneMesh = SkeletonUtils.clone;\nexport var firstMesh = function firstMesh(obj) {\n  if (!obj) return;\n  if (obj.isMesh) return obj;\n\n  if (obj.children && obj.children.length) {\n    for (var i = 0; i < obj.children.length; i++) {\n      var test = firstMesh(obj.children[i]);\n      if (test && test.isMesh) return test;\n    }\n  }\n};\nexport var promisifyLoader = function promisifyLoader(loader, onProgress) {\n  var promiseLoader = function promiseLoader(url) {\n    return new Promise(function (resolve, reject) {\n      loader.load(url, resolve, onProgress, reject);\n    });\n  };\n\n  return {\n    originalLoader: loader,\n    load: promiseLoader\n  };\n};","map":{"version":3,"sources":["/home/darlington-chuks/Documents/game-engine/src/game/utils/three/index.js"],"names":["THREE","SkeletonUtils","clean","obj","children","length","remove","geometry","dispose","material","texture","clear","parent","child","direction","getWorldDirection","Vector3","rotateAroundPoint","point","x","y","z","original","position","clone","pivot","diff","subVectors","copy","rotation","applyAxisAngle","add","model","p","c","reparent","subject","newParent","matrix","matrixWorld","applyMatrix","Matrix4","getInverse","size","currentSize","currentBox","Box3","setFromObject","getSize","cloneTexture","cloneMesh","firstMesh","isMesh","i","test","promisifyLoader","loader","onProgress","promiseLoader","url","Promise","resolve","reject","load","originalLoader"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport SkeletonUtils from \"./skeleton-utils\";\n\nexport const clean = obj => {\n\twhile (obj.children.length > 0) {\n\t\tclean(obj.children[0]);\n\t\tobj.remove(obj.children[0]);\n\t}\n\n\tif (obj.geometry && obj.geometry.dispose) obj.geometry.dispose();\n\tif (obj.material && obj.material.dispose) obj.material.dispose();\n\tif (obj.texture && obj.texture.dispose) obj.texture.dispose();\n};\n\nexport const clear = clean;\n\nexport const remove = (parent, child) => {\n\tif (child)\n\t\tclean(child);\n\n\tif (parent)\n\t\tparent.remove(child);\n};\n\nexport const direction = obj => {\n\treturn obj.getWorldDirection(new THREE.Vector3());\n};\n\nexport const rotateAroundPoint = (\n\tobj,\n\tpoint,\n\t{ x = 0, y = 0, z = 0 }\n) => {\n\t//-- https://stackoverflow.com/a/42866733/138392\n\t//-- https://stackoverflow.com/a/44288885/138392\n\n\tconst original = obj.position.clone();\n\tconst pivot = point.clone();\n\tconst diff = new THREE.Vector3().subVectors(original, pivot);\n\n\tobj.position.copy(pivot);\n\n\tobj.rotation.x += x;\n\tobj.rotation.y += y;\n\tobj.rotation.z += z;\n\n\tdiff.applyAxisAngle(new THREE.Vector3(1, 0, 0), x);\n\tdiff.applyAxisAngle(new THREE.Vector3(0, 1, 0), y);\n\tdiff.applyAxisAngle(new THREE.Vector3(0, 0, 1), z);\n\n\tobj.position.add(diff);\n};\n\nexport const model = obj => {\n\treturn obj.model ? obj.model : obj;\n};\n\nexport const add = (parent, child) => {\n\tif (!parent || !child)\n\t\treturn;\n\n\tconst p = parent.model ? parent.model : parent;\n\tconst c = child.model ? child.model : child;\n\n\tmodel(p).add(model(c))\n};\n\nexport const reparent = (subject, newParent) => {\n\tsubject.matrix.copy(subject.matrixWorld);\n\tsubject.applyMatrix(new THREE.Matrix4().getInverse(newParent.matrixWorld));\n\tnewParent.add(subject);\n};\n\nexport const size = model => {\n\tconst currentSize = new THREE.Vector3();\n\tconst currentBox = new THREE.Box3().setFromObject(model);\n\n\tcurrentBox.getSize(currentSize);\n\n\treturn currentSize;\n};\n\nexport const cloneTexture = texture => {\n\tconst clone = texture.clone();\n\n  \treturn clone;\n};\n\nexport const cloneMesh = SkeletonUtils.clone;\n\nexport const firstMesh = obj => {\n\tif (!obj)\n\t\treturn;\n\n\tif (obj.isMesh)\n\t\treturn obj;\n\n\tif (obj.children && obj.children.length){\n\t\tfor (let i = 0; i < obj.children.length; i++) {\n\t\t\tconst test = firstMesh(obj.children[i]);\n\n\t\t\tif (test && test.isMesh)\n\t\t\t\treturn test;\n\t\t}\n\t}\n};\n\nexport const promisifyLoader = (loader, onProgress) => {\n\n  const promiseLoader = url => {\n    return new Promise( (resolve, reject) => {\n      loader.load(url, resolve, onProgress, reject);\n    });\n  }\n\n  return {\n    originalLoader: loader,\n    load: promiseLoader,\n  };\n};"]},"metadata":{},"sourceType":"module"}